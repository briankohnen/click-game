{"version":3,"sources":["components/ImageCard/index.js","components/CardWrapper/index.js","components/ScoreTicker/index.js","components/Header/index.js","App.js","index.js"],"names":["ImageCard","props","className","onClick","pingImage","id","alt","name","src","image","CardWrapper","children","ScoreTicker","score","topScore","Header","headerMessage","message","href","split","map","item","key","App","state","lastClicked","pinged","some","element","handleIncorrect","setState","shuffleImages","images","sort","Math","random","this","Component","ReactDOM","render","document","getElementById"],"mappings":"m/BAaeA,MAVf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,UAAUH,EAAMI,MACzD,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCA1BC,MAJf,SAAqBT,GACnB,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,YCO1BC,MARf,SAAqBX,GACjB,OACI,yBAAKC,UAAU,SACX,4CAAiB,8BAAOD,EAAMY,OAA9B,kBAA0D,8BAAOZ,EAAMa,aCsBpEC,MAxBf,SAAgBd,GAEd,IAAIe,EAAgB,UASpB,OAPIA,EADoB,WAAlBf,EAAMgB,QACQ,YACW,aAAlBhB,EAAMgB,QACC,UAEA,UAIlB,yBAAKf,UAAU,aACb,wBAAIA,UAAU,SAAQ,uBAAGgB,KAAK,KAAR,iBACtB,4BACGjB,EAAMgB,QAAQE,MAAM,MAAMC,KAAI,SAACC,EAAMC,GACpC,OAAO,0BAAMpB,UAAWc,EAAeM,IAAKA,GAAMD,EAAK,kCAG3D,kBAAC,EAAD,CAAaR,MAAOZ,EAAMY,MAAOC,SAAUb,EAAMa,a,OC0CxCS,E,2MA1DbC,MAAQ,CACNC,YAAa,GACbZ,MAAO,EACPC,SAAU,EACVE,cAAe,8E,EAGjBZ,UAAY,SAAAC,GACV,IAAMqB,EAASrB,EACX,EAAKmB,MAAMC,YAAYE,MAAK,SAAAC,GAAO,OAAKA,IAAYF,KACtD,EAAKG,mBAEL,EAAKC,SAAS,CACZL,YAAY,GAAD,mBAAM,EAAKD,MAAMC,aAAjB,CAA8BC,IACzCb,MAAO,EAAKW,MAAMX,MAAQ,EAC1BG,cAAe,aAGX,EAAKQ,MAAMX,OAAS,EAAKW,MAAMV,UACjC,EAAKgB,SAAS,CACZhB,SAAU,EAAKU,MAAMX,MAAQ,IAGnC,EAAKkB,kB,EAITA,cAAgB,WACdC,EAAOC,MAAK,kBAAMC,KAAKC,SAAW,O,EAGpCN,gBAAkB,WAChB,EAAKE,gBACL,EAAKD,SAAS,CAAEL,YAAa,GAAIZ,MAAO,EAAGG,cAAe,Y,wEAGlD,IAAD,OACP,OACE,oCACA,kBAAC,EAAD,CAAQH,MAAOuB,KAAKZ,MAAMX,MAAOC,SAAUsB,KAAKZ,MAAMV,SACtDG,QAASmB,KAAKZ,MAAMR,gBAEpB,kBAAC,EAAD,KACGgB,EAAOZ,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CACEL,UAAW,EAAKA,UAChBC,GAAII,EAAMJ,GACViB,IAAKb,EAAMJ,GACXE,KAAME,EAAMF,KACZE,MAAOA,EAAMA,iB,GAlDP4B,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c51b1218.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.pingImage(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction CardWrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default CardWrapper;\n","import React from 'react';\nimport './style.css';\n\nfunction ScoreTicker(props) {\n    return (\n        <div className='score'>\n            <h1>Your Score : <span>{props.score}</span> | Top Score : <span>{props.topScore}</span></h1>\n        </div>\n    );\n}\n\nexport default ScoreTicker;","import React from \"react\";\nimport \"./style.css\";\nimport ScoreTicker from '../ScoreTicker';\n\nfunction Header(props) {\n\n  let headerMessage = 'options';\n    if (props.message === \"Wrong!\") {\n      headerMessage = 'incorrect';\n    } else if (props.message === \"Correct!\") {\n      headerMessage = 'correct';\n    } else {\n      headerMessage = 'options';\n    }\n  \n  return (\n    <div className='topHeader'>\n      <h1 className=\"title\"><a href='/'>Clicky Game!</a></h1>\n      <h2>\n        {props.message.split('\\n').map((item, key) => {\n          return <span className={headerMessage} key={key}>{item}<br/></span>\n          })}\n      </h2>\n      <ScoreTicker score={props.score} topScore={props.topScore} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport CardWrapper from \"./components/CardWrapper\";\nimport Header from \"./components/Header\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  state = {\n    lastClicked: [],\n    score: 0,\n    topScore: 0,\n    headerMessage: \"Click the images to score points, \\n but don't click the same image twice!\"\n  };\n\n  pingImage = id => {\n    const pinged = id;\n    if (this.state.lastClicked.some(element => (element === pinged))) {\n      this.handleIncorrect();\n    } else {\n      this.setState({ \n        lastClicked: [...this.state.lastClicked, pinged], \n        score: this.state.score + 1,\n        headerMessage: 'Correct!'\n      });\n\n        if (this.state.score >= this.state.topScore) {\n          this.setState({\n            topScore: this.state.score + 1\n          });\n        }\n      this.shuffleImages();\n    }\n  };\n\n  shuffleImages = () => {\n    images.sort(() => Math.random() - 0.5);\n  };\n\n  handleIncorrect = () => {\n    this.shuffleImages();\n    this.setState({ lastClicked: [], score: 0, headerMessage: 'Wrong!'});\n  };\n\n  render() {\n    return (\n      <>\n      <Header score={this.state.score} topScore={this.state.topScore} \n      message={this.state.headerMessage}\n      />\n      <CardWrapper>\n        {images.map(image => (\n          <ImageCard\n            pingImage={this.pingImage}\n            id={image.id}\n            key={image.id}\n            name={image.name}\n            image={image.image}\n          />\n        ))}\n      </CardWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}